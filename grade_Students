#!/bin/bash

echo -e "Student Validation Form"
echo -e "=======================\n\n"

tqp=0
stID=i
until [ "$stID" = "ok" ]
do
	echo -en "Please enter student's ID Number: "; read stdID
	stdID=$(echo $stdID | tr 'a-z' 'A-Z')
	check="$(grep "$stdID" "student.txt")"
	while IFS=: read -r programme id name icPass birth con email
	do
		if [ "$stdID" = "$id" ]
		then
			echo -e "\nStudent Name   : $name"
			echo -e "\nProgramme      : $programme"
			stID=ok
			studentName=$name
		else
			echo -e "Record not found please try again\n\n"
		fi
	done <<< $check
done

academic=i
until [ "$academic" = "ok" ]
do
	echo -en "Academic Year(YYYY): "; read inputYear
	if [[ $inputYear =~ ^20[0-9]{2} ]]
	then
		year=$inputYear
		academic=ok
	else
		echo -e "Wrong input please enter again\n\n"
	fi	
done

semester=i
until [ "$semester" = "ok" ]
do
	echo -en "Semester(1/2/3): "; read inputSem
	if [[ $inputSem =~ ^[1-3]$ ]]
	then
		sem=$inputSem
		semester=ok
	else
		echo -e "Wrong input please enter again\n\n"
	fi
done

echo -e "Generate Exam Result\n\n" >> "$stdID"Result.txt
echo -e "Student ID : ${stdID} \n\n" >> "$stdID"Result.txt
echo -e "Student Name : ${studentName} \n\n" >> "$stdID"Result.txt
echo -e "Acedemic Year : ${year} \n\n" >> "$stdID"Result.txt
echo -e "Semester : ${sem} \n\n" >> "$stdID"Result.txt
echo -e "======================================================================================================== \n" >> "$stdID"Result.txt
echo -e "Course Code :\tMarks Obtained :\tGrade Obtained :\t Quality Point :\tRemarks : \n\n" >> "$stdID"Result.txt
echo -e "======================================================================================================== \n" >> "$stdID"Result.txt		
				
continue=i
until [ "$continue" = "yes" ]
do
	echo -en "Press(n) to continue to enter the student's mark or (q) to quit from the prompt:"; read choice
	
	case "$choice" in
	n|N)
		contAddStd=y
		until [ "$contAddStd" = "n" ]
		do
			loop=y
			until [ "$loop" = "n" ]
			do
				echo -en "Please enter the course code:"; read courseCode
				courseCode=$(echo $courseCode | tr 'a-z' 'A-Z')
				search="$(grep "$courseCode" "course.txt")"
			
				while IFS=: read -r code name credit remarks
				do
					if [ "$courseCode" == "$code" ]
					then
						echo -e "\nCourse Name   : $name"
						Credit=$credit
						Coursecode=$code
						loop=n
					else
						echo -e "Please enter a valid ID\n\n"
					fi	
				done <<< $search
			done
		
			correct=i
			until [ "$correct" = "yes" ]
			do
				echo -en "Please enter the marks obtained: "; read mark
				if [ $mark -ge 0 -a "$mark" -le 100 ]
				then
				export mark
					. ./mark_Script
					correct=yes
				else
					echo -e "Wrong input please enter again\n\n"
				fi
		
			done	
			qp=`echo $Credit \* $GPA | bc`
			total=`echo $tqp \+ $qp | bc`
			tqp=$total
			echo -e "${Coursecode}\t\t${mark}\t\t\t${grade}\t\t\t${qp}\t\t\t${remarks}\n" >> "$stdID"Result.txt
			echo -en "Press (y) to continue to enter the student's marks or (b) to generate exam result: "; read contAdd
			case "$contAdd" in
			y|Y) 
				echo
				echo "Continue enter student's marks" 
				contAddStd=y;;
			b|B)	
				clear
				echo
				echo -e "\t\t\t\t\t\tTotal Quality Point: $total" >> "$stdID"Result.txt
				cat "$stdID"Result.txt
				contAddStd=n;;
			*) 
				echo -e "Invalid option\n\n"
				contAddStd=y
			esac
		done
		
		continue=yes;;
	q|Q)
		echo -e "\nYour record will not be save\n"
		sleep 2
		reset
		./menu_Selection
		continue=yes;;
	*) 
		echo -e "Invalid option\n\n"
	esac
done
